import asyncio
from datetime import datetime

import gspread
from gspread.exceptions import APIError
from loguru import logger

from passwords import igor, kostya, loggs_acc

# admin_account = igor


class clients_base:  # –∫–ª–∞—Å—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

    def __init__(self, bot, message, auto_model=None):
        self.bot = bot
        self.message = message
        self.auto_model = auto_model
        self.worksheet = None
        self.worksheet2 = None
        self.worksheet3 = None

    async def connect_to_google(self):
        for attempt in range(5):
            try:
                gc = gspread.service_account(filename='base_key.json')  # –¥–æ—Å—Ç—É–ø –∫ –≥—É–≥–ª —Ç–∞–±–ª –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Ñ–∞–π–ª—É –∞–∫–∫–∞—É–Ω—Ç–∞ —Ä–∞–∑—Ä–∞–±–∞
                # –æ—Ç–∫—Ä—ã—Ç–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ —é—Ä–ª –∞–¥—Ä–µ—Å—É:
                sh = gc.open('autoallure_dmd')
                self.worksheet = sh.worksheet('–æ–±—â–∞—è –±–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤')  # –≤—ã–±–æ—Ä –ª–∏—Å—Ç–∞ '–æ–±—â–∞—è –±–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤' —Ç–∞–±–ª–∏—Ü—ã
                self.worksheet2 = sh.worksheet('–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã')
                self.worksheet3 = sh.worksheet('—Å—Ç–∞—Ä—ã–µ –∫–ª–∏–µ–Ω—Ç—ã')
                return
            except APIError as e:
                if e.response.status_code == 503:  # –ï—Å–ª–∏ —Å–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
                    print(f"Google API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}/{5}...")
                    await asyncio.sleep(2)  # –ñ–¥–µ–º –ø–µ—Ä–µ–¥ –Ω–æ–≤–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
                else:
                    raise  # –ï—Å–ª–∏ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞, –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º
        raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Google Sheets –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫.")

    async def chec_and_record(self):  # —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∏ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑—É
        await self.connect_to_google()
        try:
            worksheet_len = len(self.worksheet.col_values(1)) + 1  # –ø–æ–∏—Å–∫ –ø–µ—Ä–≤–æ–π —Å–≤–æ–±–æ–¥–Ω–æ–π —è—á–µ–π–∫–∏ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤–æ 2 —Å—Ç–æ–ª–±—Ü–µ
            worksheet_len2 = len(self.worksheet2.col_values(1)) + 1
            await self.bot.send_message(admin_account.admin, '–ü—Ä–æ–±–∏–≤–∞—é –±–∞–∑—É..')
            await self.bot.send_message(admin_account.admin, '...')
            if str(self.message.chat.id) in self.worksheet.col_values(1):
                await self.bot.send_message(admin_account.admin, ' –ö–ª–∏–µ–Ω—Ç –µ—Å—Ç—å –≤ –±–∞–∑–µ')
            else:
                await self.bot.send_message(admin_account.admin, '–ö–ª–∏–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É\n'
                                            '–ë–∞–∑–∞: https://docs.google.com/spreadsheets/d/1M3PHqj06Ex1_'
                                            'oXKuyR8CZCjl4j67qxvQUNNfcA3WjyY/edit#gid=0')
                self.worksheet.update(f'A{worksheet_len}:F{worksheet_len}',
                                      [[self.message.chat.id, self.message.chat.username,
                                        self.message.chat.first_name, self.message.chat.last_name,
                                        self.auto_model, str(datetime.now().date())]])
                self.worksheet2.update(f'A{worksheet_len2}:F{worksheet_len2}',
                                      [[self.message.chat.id, self.message.chat.username,
                                      self.message.chat.first_name, self.message.chat.last_name,
                                     self.auto_model, str(datetime.now().date())]])
        except Exception as e:
            logger.exception('–û—à–∏–±–∫–∞ –≤ functions/chec_and_record', e)
            await self.bot.send_message(loggs_acc, f'–û—à–∏–±–∫–∞ –≤ functions/chec_and_record: {e}')

    async def perevod_v_bazu(self, nickname):  # —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ –∏–∑ –±–∞–∑—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑—É —Å—Ç–∞—Ä—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
        mess = await self.bot.send_message(admin_account.admin, '–∑–∞–≥—Ä—É–∑–∫–∞..üöÄ')
        await self.connect_to_google()
        try:
            worksheet_len3 = len(self.worksheet3.col_values(1)) + 1
            cell = self.worksheet2.find(nickname)  # –ø–æ–∏—Å–∫ —è—á–µ–π–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É
            # –∑–∞–ø–∏—Å—å –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Å–≤–æ–±–æ–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É –±–∞–∑—ã —Å—Ç–∞—Ä—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤:
            self.worksheet3.update(f'A{worksheet_len3}:F{worksheet_len3}', [self.worksheet2.row_values(cell.row)])
            self.worksheet2.batch_clear([f"A{cell.row}:F{cell.row}"])  # —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –±–∞–∑—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö
            await self.bot.edit_message_text(text='–ü—Ç–∏—á–∫–∞ –≤ –∫–ª–µ—Ç–∫–µ ‚úÖ', chat_id=admin_account.admin, message_id=mess.message_id)
        except AttributeError:
            await self.bot.edit_message_text(chat_id=admin_account.admin, text='–û—à–∏–±–∫–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –±—É–¥—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ –µ—Å–ª–∏ –æ—Å–æ–∑–Ω–∞–ª —Å–≤–æ–π '
                                                '–∫–æ—Å—è–∫ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /next_level_base —Å–Ω–æ–≤–∞', message_id=mess.message_id)
        except Exception as e:
            logger.exception('–û—à–∏–±–∫–∞ –≤ functions/perevod_v_bazu', e)
            await self.bot.send_message(loggs_acc, f'–û—à–∏–±–∫–∞ –≤ functions/perevod_v_bazu: {e}')

    async def rasylka_v_bazu(self, base):  # —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏ –ø–æ—Å—Ç–æ–≤ –≤ –±–∞–∑—ã
        mess = await self.bot.send_message(admin_account.admin, '–∑–∞–≥—Ä—É–∑–∫–∞..üöÄ')
        await self.connect_to_google()
        try:
            if base == '–û–±—â–∞—è –±–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤':
                for i in range(1, len(self.worksheet.col_values(1))):
                    try:
                        await asyncio.sleep(0.3)
                        await self.bot.copy_message(self.worksheet.col_values(1)[i], admin_account.admin, self.message.message_id)
                    except Exception:
                        await self.bot.bot.send_message(chat_id=admin_account.admin, text=f'–ë–æ—Å—Å, '
                                                         f'@{self.worksheet.col_values(2)[i]} –∑–∞–±–ª–æ—á–∏–ª –º–µ–Ω—è \n'
                                                         f'–ü–æ—Ö–æ–∂–µ –Ω–∞—Å—Ç–∞–ª–æ –≤—Ä–µ–º—è –Ω–∞–±–∏—Ç—å –µ–±–∞–ª–æ...')
                await self.bot.edit_message_text(chat_id=admin_account.admin, text='–ë–æ—Å—Å, —Ä–∞—Å—Å—ã–ª–∫–∞ –≤ –æ–±—â—É—é –±–∞–∑—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ ‚úÖ',
                                                 message_id=mess.message_id)
            elif base == '–ë–∞–∑–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤':
                for i in range(1, len(self.worksheet2.col_values(1))):
                    try:
                        await asyncio.sleep(0.3)
                        await self.bot.copy_message(self.worksheet2.col_values(1)[i], admin_account.admin, self.message.message_id)
                        #self.bot.send_message(self.worksheet2.col_values(1)[i], '–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∞–∫—Ü–∏–∏?', reply_markup=kb6)
                    except Exception:
                        await self.bot.edit_message_text(chat_id=admin_account.admin, text=f'–ë–æ—Å—Å, '
                                                         f'@{self.worksheet.col_values(2)[i]} –∑–∞–±–ª–æ—á–∏–ª –º–µ–Ω—è \n'
                                                         f'–ü–æ—Ö–æ–∂–µ –Ω–∞—Å—Ç–∞–ª–æ –≤—Ä–µ–º—è –Ω–∞–±–∏—Ç—å –µ–±–∞–ª–æ...', message_id=mess.message_id)
                await self.bot.edit_message_text(chat_id=admin_account.admin, text='–ë–æ—Å—Å, —Ä–∞—Å—Å—ã–ª–∫–∞ –≤ –æ–±—â—É—é –±–∞–∑—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ ‚úÖ',
                                                 message_id=mess.message_id)
            elif base == '–ë–∞–∑–∞ —Å—Ç–∞—Ä—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤':
                for i in range(1, len(self.worksheet3.col_values(1))):
                    try:
                        await asyncio.sleep(0.3)
                        await self.bot.copy_message(self.worksheet3.col_values(1)[i], admin_account.admin, self.message.message_id)
                        #self.bot.send_message(self.worksheet3.col_values(1)[i], '–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∞–∫—Ü–∏–∏?', reply_markup=kb6)
                    except Exception:
                        await self.bot.edit_message_text(chat_id=admin_account.admin, text=f'–ë–æ—Å—Å, '
                                                         f'@{self.worksheet.col_values(2)[i]} –∑–∞–±–ª–æ—á–∏–ª –º–µ–Ω—è \n'
                                                         f'–ü–æ—Ö–æ–∂–µ –Ω–∞—Å—Ç–∞–ª–æ –≤—Ä–µ–º—è –Ω–∞–±–∏—Ç—å –µ–±–∞–ª–æ...', message_id=mess.message_id)
                await self.bot.edit_message_text(chat_id=admin_account.admin, text='–ë–æ—Å—Å, —Ä–∞—Å—Å—ã–ª–∫–∞ –≤ –æ–±—â—É—é –±–∞–∑—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ ‚úÖ',
                                                 message_id=mess.message_id)
        except Exception as e:
            logger.exception('–û—à–∏–±–∫–∞ –≤ functions/rasylka_v_bazu', e)
            await self.bot.send_message(loggs_acc, f'–û—à–∏–±–∫–∞ –≤ functions/rasylka_v_bazu: {e}')


class Admin_acc:
    def __init__(self):
        self.admin = kostya

    async def get_admin(self):
        return self.admin

    async def set_admin(self):
        if self.admin == kostya:
            self.admin = igor
        else:
            self.admin = kostya


admin_account = Admin_acc()

