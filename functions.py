from telebot import types
# –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ä–∞–±–æ—Ç—ã —Å –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü–∞–º–∏
import gspread
# –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞—Ç—ã
from datetime import *
# –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ä–∞–Ω–¥–æ–º–∞
from random import *
from passwords import *

admin_account = igor


def marks_buttons(bot, message):  # —Ñ—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –º–∞—Ä–∫–∞–º–∏ –∞–≤—Ç–æ
    kb1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    but1 = types.KeyboardButton(text='AUDI')
    but2 = types.KeyboardButton(text='BMW')
    but3 = types.KeyboardButton(text='CADILLAC')
    but4 = types.KeyboardButton(text='CHERY')
    but5 = types.KeyboardButton(text='CHEVROLET')
    but6 = types.KeyboardButton(text='CHRYSLER')
    but7 = types.KeyboardButton(text='CITROEN')
    but8 = types.KeyboardButton(text='EXCEED')
    but9 = types.KeyboardButton(text='FORD')
    but10 = types.KeyboardButton(text='GEELY')
    but11 = types.KeyboardButton(text='HAVAL')
    but12 = types.KeyboardButton(text='HONDA')
    but13 = types.KeyboardButton(text='HYUNDAI')
    but14 = types.KeyboardButton(text='INFINITI')
    but15 = types.KeyboardButton(text='JAGUAR')
    but16 = types.KeyboardButton(text='JEEP')
    but17 = types.KeyboardButton(text='KIA')
    but18 = types.KeyboardButton(text='LADA')
    but19 = types.KeyboardButton(text='LAND ROVER')
    but20 = types.KeyboardButton(text='LEXUS')
    but21 = types.KeyboardButton(text='MAZDA')
    but22 = types.KeyboardButton(text='MERCEDES-BENZ')
    but23 = types.KeyboardButton(text='MINI')
    but24 = types.KeyboardButton(text='MITSUBISHI')
    but25 = types.KeyboardButton(text='NISSAN')
    but26 = types.KeyboardButton(text='OPEL')
    but27 = types.KeyboardButton(text='PEUGEOT')
    but28 = types.KeyboardButton(text='PORSCHE')
    but29 = types.KeyboardButton(text='RENAULT')
    but30 = types.KeyboardButton(text='SKODA')
    but31 = types.KeyboardButton(text='SUBARU')
    but32 = types.KeyboardButton(text='TOYOTA')
    but33 = types.KeyboardButton(text='VOLVO')
    but34 = types.KeyboardButton(text='VOLKSWAGEN')
    but35 = types.KeyboardButton(text='üö´–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å–ø–∏—Å–∫–µ')
    kb1.add(but1, but2, but3, but4, but5, but6, but7, but8, but9, but10, but11, but12, but13, but14, but15, but16,
            but17, but18, but19, but20, but21, but22, but23, but24, but25, but26, but27, but28, but29, but30, but31,
            but32, but33, but34, but35)
    bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫—É –í–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è', reply_markup=kb1)


class search_models: #–∫–ª–∞—Å—Å –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∏–π –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å –∞–≤—Ç–æ –∫ –∫–ª–∞—Å—Å—É
    klass_first = ['TT', 'X2', 'Bonus', 'ATS', 'Aveo', 'Spark', 'Neon', 'DS-4', 'Focus', 'Jazz', 'Atos', 'Q30', 'Rio', 'Granta',
                   'IS,', 'MX-5', 'SLK', 'Cooper', 'Colt', 'Tiida', 'Astra', '308', '911', 'Clio', 'Rapid', 'Legacy',
                   'Yaris', 'S40', 'Polo']
    klass_second = ['RS6', 'X4', 'Tiggo 1-4', 'XT5', 'Rezzo', 'Voyager', 'Picasso', 'TXL', 'Kuga', 'Coolray',
                    'Dargo', 'Prelude', 'Creta', 'Tucson', 'QX55', 'F-type', 'Venga', 'Evoque', 'GS', 'CX-3', 'GLA',
                    'Clubman', 'Grandis', 'Juke', 'Omega', 'Partner', 'Macan', 'Arkana', 'Laguna', 'Yeti', 'Impreza', 'Prius',
                    'V60', 'Tiguan']
    klass_third = ['e-tron', 'X6', 'Tiggo 7-8', 'Escalade', 'Tahoe', 'C-crosser', 'VX', 'Galaxy', 'Tugella',
                   'H9', 'CR-V', 'Palisade', 'JX70', 'XJ', 'Compass', 'Mohave', 'Velar', 'GX', 'CX-9', 'GLC', 'Pajero',
                   'Murano', 'Cayenne', 'Koleos', 'Kodiaq', 'Tribeca', 'Prado', 'XC90', 'Phaeton']
    klasses = [klass_first, klass_second, klass_third]

    def __init__(self, bot, message, text, auto_model):
        self.bot = bot
        self.message = message
        self.text = text
        self.list = list
        self.auto_model = auto_model
        for klass in self.klasses:
            for i in klass:
                if text.find(i) >= 0 and klass == self.klass_first:
                    file_open = open("1 class_.png", 'rb')
                    bot.send_photo(message.chat.id, file_open, f'–ì–æ—Ç–æ–≤–æ!\n'
                                                               f'–°—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥ –¥–ª—è –í–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è {auto_model}\n'
                                                               '—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–≤–æ–º—É —Ü–µ–Ω–æ–≤–æ–º—É –∫–ª–∞—Å—Å—É.\n'
                                                               f'/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É \n'
                                                               f'/result - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –æ—Ç–∑—ã–≤—ã –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç')
                    model_buttons(self.bot, self.message).zayavka_buttons()  # –≤—ã–∑–æ–≤ –∫–ª–∞–≤–∏—à –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏
                    bot.send_message(admin_account, f'–•–æ–∑—è–∏–Ω! –ó–∞–º–µ—á–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:\n'
                                                   f'–ò–º—è: {message.from_user.first_name}\n'
                                                   f'–§–∞–º–∏–ª–∏—è: {message.from_user.last_name}\n'
                                                   f'–ù–∏–∫–Ω–µ–π–º: {message.from_user.username}\n'
                                                   f'–°—Å—ã–ª–∫–∞: @{message.from_user.username}\n'
                                                   f'–ê–≤—Ç–æ: {auto_model} 1 –∫–ª–∞—Å—Å–∞')
                    # –ø–µ—Ä–µ–¥–∞—á–∞ –∫–ª–∞—Å—Å—É –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ –≤ –±–∞–∑–µ –∏ –∑–∞–ø–∏—Å–∏ –≤ —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è
                    clients_base(self.bot, self.message, auto_model=self.auto_model + ' 1 –∫–ª–∞—Å—Å–∞').chec_and_record()

                if text.find(i) >= 0 and klass == self.klass_second:
                    file_open = open("2 class.png", 'rb')
                    bot.send_photo(message.chat.id, file_open, f'–ì–æ—Ç–æ–≤–æ!\n'
                                                               f'–°—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥ –¥–ª—è –í–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è {auto_model}\n'
                                                               '—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—Ç–æ—Ä–æ–º—É —Ü–µ–Ω–æ–≤–æ–º—É –∫–ª–∞—Å—Å—É.\n'
                                                               f'/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É \n'
                                                               f'/result - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –æ—Ç–∑—ã–≤—ã –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç')
                    model_buttons(self.bot, self.message).zayavka_buttons()
                    bot.send_message(admin_account, f'–•–æ–∑—è–∏–Ω! –ó–∞–º–µ—á–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:\n'
                                                    f'–ò–º—è: {message.from_user.first_name}\n'
                                                    f'–§–∞–º–∏–ª–∏—è: {message.from_user.last_name}\n'
                                                    f'–ù–∏–∫–Ω–µ–π–º: {message.from_user.username}\n'
                                                    f'–°—Å—ã–ª–∫–∞: @{message.from_user.username}\n'
                                                    f'–ê–≤—Ç–æ: {auto_model} 2 –∫–ª–∞—Å—Å–∞')
                    clients_base(self.bot, self.message, auto_model=self.auto_model + ' 2 –∫–ª–∞—Å—Å–∞').chec_and_record()

                if text.find(i) >= 0 and klass == self.klass_third:
                    file_open = open("3 class.png", 'rb')
                    bot.send_photo(message.chat.id, file_open, f'–ì–æ—Ç–æ–≤–æ!\n'
                                                               f'–°—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥ –¥–ª—è –í–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è {auto_model}\n'
                                                               f'—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ—Ç—å–µ–º—É —Ü–µ–Ω–æ–≤–æ–º—É –∫–ª–∞—Å—Å—É.\n'
                                                               f'/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É \n'
                                                               f'/result - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –æ—Ç–∑—ã–≤—ã –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç')
                    model_buttons(self.bot, self.message).zayavka_buttons()
                    bot.send_message(admin_account, f'–•–æ–∑—è–∏–Ω! –ó–∞–º–µ—á–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:\n'
                                                    f'–ò–º—è: {message.from_user.first_name}\n'
                                                    f'–§–∞–º–∏–ª–∏—è: {message.from_user.last_name}\n'
                                                    f'–ù–∏–∫–Ω–µ–π–º: {message.from_user.username}\n'
                                                    f'–°—Å—ã–ª–∫–∞: @{message.from_user.username}\n'
                                                    f'–ê–≤—Ç–æ: {auto_model} 3 –∫–ª–∞—Å—Å–∞')
                    clients_base(self.bot, self.message, auto_model=self.auto_model + ' 3 –∫–ª–∞—Å—Å–∞').chec_and_record()


class model_buttons: # –∫–ª–∞—Å—Å —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä

    def __init__(self, bot, message, **kwargs):
        self.bot = bot
        self.message = message
        self.kwargs = kwargs

    def model_buttons(self):
        kb3 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        for key, value in self.kwargs.items():
            key = types.KeyboardButton(text=f'{value}')
            kb3.add(key)
        self.bot.send_message(self.message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –í–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è', reply_markup=kb3)

    def zayavka_buttons(self):
        kb4 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        but1 = types.KeyboardButton(text='–î–∞, —Ö–æ—á—É!')
        but2 = types.KeyboardButton(text='üîô–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ')
        kb4.add(but1, but2)
        self.bot.send_message(self.message.chat.id, f'–•–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é(-–∏–µ) –í–∞—Å —É—Å–ª—É–≥—É(-–∏)?\n',
                              reply_markup=kb4)

    def rasylka_buttons(self):
        kb5 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        but1 = types.KeyboardButton(text='–û–±—â–∞—è –±–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤')
        but2 = types.KeyboardButton(text='–ë–∞–∑–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤')
        but3 = types.KeyboardButton(text='–ë–∞–∑–∞ —Å—Ç–∞—Ä—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤')
        kb5.add(but1, but2, but3)
        self.bot.send_message(self.message.chat.id, '...', reply_markup=kb5)


def zayavka_done(bot, message):
    if message.from_user.username is not None:
        bot.send_message(message.chat.id, f'–ó–∞—è–≤–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞ –∏ –ø–µ—Ä–µ–¥–∞–Ω–∞ –º–∞—Å—Ç–µ—Ä—É, —Å –í–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. '
                                           '–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å.ü§ù\n'
                                          f'–î–ª—è –Ω–æ–≤–æ–≥–æ —Ä–∞—Å—Å—á–µ—Ç–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /price')
        bot.send_message(admin_account, f'üö®!!!–°–†–û–ß–ù–û!!!üö®\n'
                                        f'–•–æ–∑—è–∏–Ω, –ø–æ—Å—Ç—É–ø–∏–ª–∞ –ó–ê–Ø–í–ö–ê –æ—Ç:\n'
                                        f'–ü—Å–µ–≤–¥–æ–Ω–∏–º: @{message.from_user.username}\n'
                                        f'id —á–∞—Ç–∞: {message.chat.id}\n'
                                        f'–ë—ã—Å—Ç—Ä–µ–µ —Å–æ–≥–ª–∞—Å—É–π –¥–∞—Ç—É –∏ –∑–∞–∫—Ä–æ–π –∑–∞—è–≤–∫—É –ø–æ–∫–∞ –æ–Ω –Ω–µ —Å–ª–∏–ª—Å—è'
                                        f'\n'
                                        f'–í —Å–ª—É—á–∞–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏ –Ω–µ –∑–∞–±—É–¥—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –±–∞–∑—ã '
                                        f'"–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã" –≤ –±–∞–∑—É "—Å—Ç–∞—Ä—ã–µ –∫–ª–∏–µ–Ω—Ç—ã" —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã\n '
                                        f'/next_level_base\n'
                                        f'/sent_message - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –±–æ—Ç–∞')
    else:
        bot.send_message(message.chat.id, f'–ó–∞—è–≤–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞ –∏ –ø–µ—Ä–µ–¥–∞–Ω–∞ –º–∞—Å—Ç–µ—Ä—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —á–∞—Ç '
                                          f'@pogonin21 –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ '
                                          f'—Å–æ–æ–±—â–µ–Ω–∏–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –ª—é–±–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. '
                                          f'–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å.ü§ù\n'
                                          f'–î–ª—è –Ω–æ–≤–æ–≥–æ —Ä–∞—Å—Å—á–µ—Ç–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /price')
        bot.send_message(admin_account, f'üö®!!!–°–†–û–ß–ù–û!!!üö®\n'
                                        f'–•–æ–∑—è–∏–Ω, –ø–æ—Å—Ç—É–ø–∏–ª–∞ –ó–ê–Ø–í–ö–ê –æ—Ç:\n'
                                        f'–ü—Å–µ–≤–¥–æ–Ω–∏–º: @{message.from_user.username}\n'
                                        f'id —á–∞—Ç–∞: {message.chat.id}\n'
                                        f'–ë—ã—Å—Ç—Ä–µ–µ —Å–æ–≥–ª–∞—Å—É–π –¥–∞—Ç—É –∏ –∑–∞–∫—Ä–æ–π –∑–∞—è–≤–∫—É –ø–æ–∫–∞ –æ–Ω –Ω–µ —Å–ª–∏–ª—Å—è\n'
                                        f'–í —Å–ª—É—á–∞–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏ –Ω–µ –∑–∞–±—É–¥—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –±–∞–∑—ã '
                                        f'"–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã" –≤ –±–∞–∑—É "—Å—Ç–∞—Ä—ã–µ –∫–ª–∏–µ–Ω—Ç—ã" —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã\n '
                                        f'/next_level_base\n'
                                        f'/sent_message - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –±–æ—Ç–∞')


class clients_base:  # –∫–ª–∞—Å—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

    def __init__(self, bot, message, auto_model, perehvat=None):
        self.bot = bot
        self.message = message
        self.auto_model = auto_model
        self.perehvat = perehvat
        gc = gspread.service_account(filename='base_key.json')  # –¥–æ—Å—Ç—É–ø –∫ –≥—É–≥–ª —Ç–∞–±–ª –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Ñ–∞–π–ª—É –∞–∫–∫–∞—É–Ω—Ç–∞ —Ä–∞–∑—Ä–∞–±–∞
        # –æ—Ç–∫—Ä—ã—Ç–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ —é—Ä–ª –∞–¥—Ä–µ—Å—É:
        sh = gc.open('autoallure_dmd')
        self.worksheet = sh.worksheet('–æ–±—â–∞—è –±–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤')  # –≤—ã–±–æ—Ä –ª–∏—Å—Ç–∞ '–æ–±—â–∞—è –±–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤' —Ç–∞–±–ª–∏—Ü—ã
        self.worksheet2 = sh.worksheet('–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã')
        self.worksheet3 = sh.worksheet('—Å—Ç–∞—Ä—ã–µ –∫–ª–∏–µ–Ω—Ç—ã')

    def chec_and_record(self):  # —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∏ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑—É
        worksheet_len = len(self.worksheet.col_values(1)) + 1  # –ø–æ–∏—Å–∫ –ø–µ—Ä–≤–æ–π —Å–≤–æ–±–æ–¥–Ω–æ–π —è—á–µ–π–∫–∏ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤–æ 2 —Å—Ç–æ–ª–±—Ü–µ
        worksheet_len2 = len(self.worksheet2.col_values(1)) + 1
        self.bot.send_message(admin_account, '–ü—Ä–æ–±–∏–≤–∞—é –±–∞–∑—É..')
        self.bot.send_message(admin_account, '...')
        if str(self.message.chat.id) in self.worksheet.col_values(1):
            self.bot.send_message(admin_account, ' –ö–ª–∏–µ–Ω—Ç –µ—Å—Ç—å –≤ –±–∞–∑–µ')
        else:
            self.bot.send_message(admin_account, f'–ö–ª–∏–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É\n'
                    f'–ë–∞–∑–∞: '
                    f'https://docs.google.com/spreadsheets/d/1M3PHqj06Ex1_oXKuyR8CZCjl4j67qxvQUNNfcA3WjyY/edit#gid=0')
            self.worksheet.update(f'A{worksheet_len}:F{worksheet_len}', [[self.message.chat.id, self.message.from_user.username,
                                             self.message.from_user.first_name, self.message.from_user.last_name,
                                             self.auto_model, str(datetime.now().date())]])
            self.worksheet2.update(f'A{worksheet_len2}:F{worksheet_len2}',
                                  [[self.message.chat.id, self.message.from_user.username,
                                    self.message.from_user.first_name, self.message.from_user.last_name,
                                    self.auto_model, str(datetime.now().date())]])

    def perevod_v_bazu(self):  # —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ –∏–∑ –±–∞–∑—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑—É —Å—Ç–∞—Ä—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
        try:
            worksheet_len3 = len(self.worksheet3.col_values(1)) + 1
            cell = self.worksheet.find(self.perehvat)  # –ø–æ–∏—Å–∫ —è—á–µ–π–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É
            # –∑–∞–ø–∏—Å—å –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Å–≤–æ–±–æ–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É –±–∞–∑—ã —Å—Ç–∞—Ä—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤:
            self.worksheet3.update(f'A{worksheet_len3}:F{worksheet_len3}', [self.worksheet.row_values(cell.row)])
            self.worksheet2.batch_clear([f"A{cell.row}:F{cell.row}"])  # —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –±–∞–∑—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö
            self.bot.send_message(admin_account, '–ü—Ç–∏—á–∫–∞ –≤ –∫–ª–µ—Ç–∫–µ ‚úÖ')
        except AttributeError:
            self.bot.send_message(admin_account, '–û—à–∏–±–∫–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –±—É–¥—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ –µ—Å–ª–∏ –æ—Å–æ–∑–Ω–∞–ª —Å–≤–æ–π '
                                                '–∫–æ—Å—è–∫ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /next_level_base —Å–Ω–æ–≤–∞')

    def rasylka_v_bazu(self):  # —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏ –ø–æ—Å—Ç–æ–≤ –≤ –±–∞–∑—ã
        kb5 = types.ReplyKeyboardRemove()  # —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        kb6 = types.InlineKeyboardMarkup(row_width=1)
        but1 = types.InlineKeyboardButton(text='–ö–æ–Ω–µ—á–Ω–æ!', callback_data='btn')
        kb6.add(but1)
        if self.perehvat == '–û–±—â–∞—è –±–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤':
            self.bot.send_message(admin_account, '...', reply_markup=kb5)
            for i in range(1, len(self.worksheet.col_values(1))):
                try:
                    self.bot.copy_message(self.worksheet.col_values(1)[i], admin_account, self.message, reply_markup=kb5)
                    #self.bot.send_message(self.worksheet.col_values(1)[i], '–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∞–∫—Ü–∏–∏?', reply_markup=kb6)
                except Exception as ex:
                    self.bot.send_message(admin_account, f'–ë–æ—Å—Å, @{self.worksheet.col_values(2)[i]} –∑–∞–±–ª–æ—á–∏–ª –º–µ–Ω—è \n'
                                                         f'–ü–æ—Ö–æ–∂–µ –Ω–∞—Å—Ç–∞–ª–æ –≤—Ä–µ–º—è –Ω–∞–±–∏—Ç—å –µ–±–∞–ª–æ...')
            self.bot.send_message(admin_account, '–ë–æ—Å—Å, —Ä–∞—Å—Å—ã–ª–∫–∞ –≤ –æ–±—â—É—é –±–∞–∑—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ ‚úÖ')
        if self.perehvat == '–ë–∞–∑–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤':
            self.bot.send_message(admin_account, '...', reply_markup=kb5)
            for i in range(1, len(self.worksheet.col_values(1))):
                try:
                    self.bot.copy_message(self.worksheet2.col_values(1)[i], admin_account, self.message, reply_markup=kb5)
                    #self.bot.send_message(self.worksheet2.col_values(1)[i], '–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∞–∫—Ü–∏–∏?', reply_markup=kb6)
                except Exception as ex:
                    self.bot.send_message(admin_account, f'–ë–æ—Å—Å, @{self.worksheet2.col_values(2)[i]} –∑–∞–±–ª–æ—á–∏–ª –º–µ–Ω—è \n'
                                                         f'–ü–æ—Ö–æ–∂–µ –Ω–∞—Å—Ç–∞–ª–æ –≤—Ä–µ–º—è –Ω–∞–±–∏—Ç—å –µ–±–∞–ª–æ...')
            self.bot.send_message(admin_account, '–ë–æ—Å—Å, —Ä–∞—Å—Å—ã–ª–∫–∞ –≤ –±–∞–∑—É –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ ‚úÖ')
        if self.perehvat == '–ë–∞–∑–∞ —Å—Ç–∞—Ä—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤':
            self.bot.send_message(admin_account, '...', reply_markup=kb5)
            for i in range(0, len(self.worksheet.col_values(1))):
                try:
                    self.bot.copy_message(self.worksheet3.col_values(1)[i], admin_account, self.message, reply_markup=kb5)
                    #self.bot.send_message(self.worksheet3.col_values(1)[i], '–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∞–∫—Ü–∏–∏?', reply_markup=kb6)
                except Exception as ex:
                    self.bot.send_message(admin_account, f'–ë–æ—Å—Å, @{self.worksheet3.col_values(2)[i]} –∑–∞–±–ª–æ—á–∏–ª –º–µ–Ω—è \n'
                                                         f'–ü–æ—Ö–æ–∂–µ –Ω–∞—Å—Ç–∞–ª–æ –≤—Ä–µ–º—è –Ω–∞–±–∏—Ç—å –µ–±–∞–ª–æ...')
            self.bot.send_message(admin_account, '–ë–æ—Å—Å, —Ä–∞—Å—Å—ã–ª–∫–∞ –≤ –±–∞–∑—É —Å—Ç–∞—Ä—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ ‚úÖ')


class rasylka_message:  # –∫–ª–∞—Å—Å —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
    def __init__(self, post):
        self.post = post

    def _get_message_(self):
        return self.post






#class auto_voronka:
    #def __init__(self, bot, day, month):
        #self.bot = bot
        #self.day = day
        #self.month = month
        #gc = gspread.service_account(filename='base_key.json')  # –¥–æ—Å—Ç—É–ø –∫ –≥—É–≥–ª —Ç–∞–±–ª –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Ñ–∞–π–ª—É –∞–∫–∫–∞—É–Ω—Ç–∞ —Ä–∞–∑—Ä–∞–±–∞
        # –æ—Ç–∫—Ä—ã—Ç–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ —é—Ä–ª –∞–¥—Ä–µ—Å—É:
        #sh = gc.open_by_url("https://docs.google.com/spreadsheets/d/1M3PHqj06Ex1_oXKuyR8CZCjl4j67qxvQUNNfcA3WjyY/edit")
        #self.worksheet2 = sh.worksheet('–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã')
    #def voronka_potencialnye(self):
        #for i in range(1, len(self.worksheet2.col_values(1)))



